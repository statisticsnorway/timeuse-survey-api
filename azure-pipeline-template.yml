
parameters:
  # Mandatory
  # The fully qualified name of the image repository e.g. prod-bip/ssb/stratus/am-hello-world
  - name: repoName
    default: ''

  # Mandatory
  # The fully qualified name of the Docker image e.g. eu.gcr.io/prod-bip/ssb/stratus/am-hello-world
  - name: imageName
    default: ''

  - name: gcrServiceConnection
    default: 'gcrServiceConnection'

steps:
  - task: Cache@2
    displayName: Build Gradle cache
    inputs:
      key: 'gradle | "$(Agent.OS)"'
      restoreKeys: gradle
      path: $(Pipeline.Workspace)/.gradle

  - task: Gradle@3
    displayName: 'Run tests'
    inputs:
      tasks: 'clean check'
      options: '--build-cache'
      gradleWrapperFile: 'gradlew'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '17'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'

  - task: Gradle@3
    displayName: 'Build JAR'
    inputs:
      tasks: 'build'
      gradleWrapperFile: 'gradlew'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '17'
      jdkArchitectureOption: 'x64'

  - template: docker/docker-build-image-and-push-to-gcr.yml@templates
    parameters:
      repoName: ${{ parameters.repoName }}
      imageName: ${{ parameters.imageName }}
      gcrServiceConnection: ${{ parameters.gcrServiceConnection }}