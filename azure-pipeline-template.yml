# Complete Template for Gradle project.
# Job which runs Gradle clean test, build jar, builds Docker image,
# tag the image, pushes this to GCR and checks for any image vulnerabilities

parameters:
  # The fully qualified name of the image repository e.g. prod-bip/ssb/stratus/am-hello-world
  - name: repoName
    default: ''

  # The fully qualified name of the Docker image e.g. eu.gcr.io/prod-bip/ssb/stratus/am-hello-world
  - name: imageName
    default: ''

  # The service connection to GCR
  - name: gcrServiceConnection
    default: 'gcrServiceConnection'

jobs:
  - job: build_and_deploy
    displayName: 'Build, test and deploy Dockerimage'

    steps:
      - task: Cache@2
        displayName: Build Gradle cache
        inputs:
          key: 'gradle | "$(Agent.OS)"'
          restoreKeys: gradle
          path: $(Pipeline.Workspace)/.gradle

      - task: Gradle@3
        displayName: 'Run tests'
        inputs:
          tasks: 'clean check'
          options: '--build-cache'
          gradleWrapperFile: 'gradlew'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '17'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'

      - task: Gradle@3
        displayName: 'Build JAR'
        inputs:
          tasks: 'build'
          gradleWrapperFile: 'gradlew'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '17'
          jdkArchitectureOption: 'x64'

      - template: docker/docker-build-image-and-push-to-gcr.yml@templates
        parameters:
          repoName: ${{ parameters.repoName }}
          imageName: ${{ parameters.imageName }}
          gcrServiceConnection: ${{ parameters.gcrServiceConnection }}